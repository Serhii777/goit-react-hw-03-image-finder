{"version":3,"sources":["components/Layout/Layout.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/Modal/Modal.js","services/imagesApi.js","components/App.js","index.js"],"names":["Layout","children","className","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","type","onChange","autoComplete","autoFocus","placeholder","Component","defaultProps","ImageGalleryItem","id","src","onShow","key","onClick","alt","ImageGallery","images","onShowLargeImage","map","webformatURL","largeImageURL","Button","onLoadMore","Modal","onCloseOverlay","searchQuery","page","fetch","then","res","json","data","hits","App","loading","error","showLargeImage","url","console","log","onScrollTo","window","scrollTo","top","document","documentElement","scrollHeight","behavior","fetchImages","imagesApi","prevState","catch","finally","closeModal","handleKeyDown","code","handleClickOverlay","nodeName","handleSearchBarSubmit","query","addEventListener","prevProps","removeEventListener","color","height","width","length","ReactDOM","render","getElementById"],"mappings":"kaAOeA,G,MAJA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAChB,OAAO,yBAAKC,UAAU,aAAaD,KCAhBE,G,kNASnBC,MAAQ,CACNC,WAAY,I,EAGdC,aAAe,SAACC,GACd,EAAKC,SAAS,CACZH,WAAYE,EAAEE,OAAOC,S,EAIzBC,aAAe,SAACJ,GACdA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKV,MAAMC,YAE/B,EAAKG,SAAS,CAAEH,WAAY,M,uDAI5B,OACE,4BAAQH,UAAU,aAChB,0BAAMA,UAAU,iBAAiBY,SAAUC,KAAKJ,cAC9C,4BAAQK,KAAK,SAASd,UAAU,oBAC9B,0BAAMA,UAAU,mBAAhB,WAGF,2BACEQ,MAAOK,KAAKX,MAAMC,WAClBY,SAAUF,KAAKT,aACfJ,UAAU,kBACVc,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,mC,GA1CeC,cAAlBlB,EAKZmB,aAAe,CACpBjB,WAAY,I,UCNVkB,EAAmB,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,IAAKC,EAAa,EAAbA,OACnC,OACE,wBAAIxB,UAAU,eAAeyB,IAAKH,EAAII,QAASF,GAC7C,yBAAKD,IAAKA,EAAKI,IAAI,GAAG3B,UAAU,oBAarCqB,EAAiBD,aAAe,CAC7BE,GAAI,GACJC,IAAK,IAGMF,QCpBTO,G,MAAe,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,OAAQC,EAAuB,EAAvBA,iBAC9B,OACE,wBAAI9B,UAAU,WACX6B,EAAOE,KAAI,gBAAGT,EAAH,EAAGA,GAAIU,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,cAArB,OACV,kBAAC,EAAD,CACEX,GAAIA,EACJC,IAAKS,EACLR,OAAQ,kBAAMM,EAAiBG,YAiBzCL,EAAaR,aAAe,CAC1BE,GAAI,GACJU,aAAc,GACdC,cAAe,IAGFL,QCfAM,G,MAhBA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAChB,OACE,yBAAKnC,UAAU,kBACb,4BAAQc,KAAK,SAASd,UAAU,SAAS0B,QAASS,GAAlD,gBCHAC,G,MAAQ,SAAC,GAAuC,IAArCH,EAAoC,EAApCA,cAAeI,EAAqB,EAArBA,eAC9B,OACE,yBAAKrC,UAAU,UAAU0B,QAASW,GAChC,yBAAKrC,UAAU,SACb,yBAAKuB,IAAKU,EAAeN,IAAI,SAarCS,EAAMhB,aAAe,CACnBa,cAAe,IAGFG,Q,gBCPA,EAhBc,SAACE,GAA2B,IAAdC,EAAa,uDAAN,EAOhD,OAAOC,MAAK,4EAE6DF,EAF7D,yDAEyHC,EAFzH,iBAKTE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GAAD,OAAUA,EAAKC,SCHJC,E,4MAcnB5C,MAAQ,CACN2B,OAAQ,GACRkB,SAAS,EACTC,MAAO,KACPV,YAAa,GACbC,KAAM,EACNN,cAAe,M,EAOjBgB,eAAiB,SAACC,GAChB,EAAK5C,SAAS,CAAE2B,cAAeiB,IAC/BC,QAAQC,IAAI,+F,EAkBdC,WAAa,WACXC,OAAOC,SAAS,CACdC,IAAKC,SAASC,gBAAgBC,aAC9BC,SAAU,Y,EASdC,YAAc,WAAO,IAAD,EACY,EAAK3D,MAA3BoC,EADU,EACVA,YAAaC,EADH,EACGA,KAErB,EAAKjC,SAAS,CAAEyC,SAAS,IAEzBe,EACwBxB,EAAaC,GAClCE,MAAK,SAACZ,GACL,EAAKvB,UAAS,SAACyD,GAAD,MAAgB,CAC5BlC,OAAO,GAAD,mBAAMkC,EAAUlC,QAAhB,YAA2BA,IACjCU,KAAMwB,EAAUxB,KAAO,SAG1ByB,OAAM,SAAChB,GAAD,OAAW,EAAK1C,SAAS,CAAE0C,aACjCiB,SAAQ,kBAAM,EAAK3D,SAAS,CAAEyC,SAAS,Q,EAI5CmB,WAAa,WACX,EAAK5D,SAAS,CACZ2B,cAAe,Q,EAInBkC,cAAgB,SAAC9D,GACA,WAAXA,EAAE+D,MACJ,EAAKF,c,EAITG,mBAAqB,SAAChE,GACM,QAAtBA,EAAEE,OAAO+D,UACX,EAAKJ,c,EAKTK,sBAAwB,SAACC,GACvB,EAAKlE,SAAS,CACZuB,OAAQ,GACRS,YAAakC,EACbjC,KAAM,K,kEA5ERe,OAAOmB,iBAAiB,UAAW5D,KAAKsD,iB,yCAQvBO,EAAWX,GAAY,IAChClC,EAAWhB,KAAKX,MAAhB2B,OAEUkC,EAAUzB,cACVzB,KAAKX,MAAMoC,aAG3BzB,KAAKgD,cAGHE,IAAclC,GAChBhB,KAAKwC,e,6CAYPF,QAAQC,IAAI,wBACZE,OAAOqB,oBAAoB,UAAW9D,KAAKsD,iB,+BAgDnC,IAAD,EACoCtD,KAAKX,MAAxC2B,EADD,EACCA,OAAQkB,EADT,EACSA,QAASd,EADlB,EACkBA,cAEzB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAWrB,SAAUC,KAAK0D,wBAC1B,kBAAC,EAAD,CAAc1C,OAAQA,EAAQC,iBAAkBjB,KAAKoC,iBAEpDF,GACC,yBAAK/C,UAAU,UACb,kBAAC,IAAD,CAAQc,KAAK,OAAO8D,MAAM,UAAUC,OAAQ,IAAKC,MAAO,OAI3DjD,EAAOkD,OAAS,GAAK,kBAAC,EAAD,CAAQ5C,WAAYtB,KAAKgD,cAE9C5B,GACC,kBAAC,EAAD,CACEA,cAAeA,EACfI,eAAgBxB,KAAKwD,0B,GA3HAlD,aAAZ2B,EAUZ1B,aAAe,CACpBmB,KAAM,GClBVyC,IAASC,OACL,kBAAC,EAAD,MACFxB,SAASyB,eAAe,W","file":"static/js/main.bb440dd3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Layout.css\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return <div className=\"container\">{children}</div>;\r\n};\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Searchbar.css\";\r\n\r\nexport default class Searchbar extends Component {\r\n  static propTypes = {\r\n    inputValue: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  state = {\r\n    inputValue: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      inputValue: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"searchbar\">\r\n        <form className=\"searchbar-form\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"searchbar-button\">\r\n            <span className=\"searchbar-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            value={this.state.inputValue}\r\n            onChange={this.handleChange}\r\n            className=\"searchbar-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./ImageGalleryItem.css\";\r\n\r\nconst ImageGalleryItem = ({ id, src, onShow }) => {\r\n  return (\r\n    <li className=\"gallery-item\" key={id} onClick={onShow}>\r\n      <img src={src} alt=\"\" className=\"gallery-image\" />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  props: PropTypes.exact({\r\n    id: PropTypes.string.isRequired,\r\n    src: PropTypes.string.isRequired,\r\n    onShow: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\n ImageGalleryItem.defaultProps = {\r\n    id: \"\",\r\n    src: \"\",\r\n  };\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem\";\r\nimport \"./ImageGallery.css\";\r\n\r\nconst ImageGallery = ({ images, onShowLargeImage }) => {\r\n  return (\r\n    <ul className=\"gallery\">\r\n      {images.map(({ id, webformatURL, largeImageURL }) => (\r\n        <ImageGalleryItem\r\n          id={id}\r\n          src={webformatURL}\r\n          onShow={() => onShowLargeImage(largeImageURL)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  props: PropTypes.exact({\r\n    images: PropTypes.arrayOf(PropTypes.string),\r\n    id: PropTypes.string.isRequired,\r\n    webformatURL: PropTypes.string.isRequired,\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onShowLargeImage: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nImageGallery.defaultProps = {\r\n  id: \"\",\r\n  webformatURL: \"\",\r\n  largeImageURL: \"\",\r\n};\r\n\r\nexport default ImageGallery;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Button.css\";\r\n\r\nconst Button = ({ onLoadMore }) => {\r\n  return (\r\n    <div className=\"button-wrapper\">\r\n      <button type=\"button\" className=\"button\" onClick={onLoadMore}>\r\n        Load more\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  props: PropTypes.exact({\r\n    onLoadMore: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Modal.css\";\r\n\r\nconst Modal = ({ largeImageURL, onCloseOverlay }) => {\r\n  return (\r\n    <div className=\"overlay\" onClick={onCloseOverlay}>\r\n      <div className=\"modal\">\r\n        <img src={largeImageURL} alt=\"\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nModal.propTypes = {\r\n  props: PropTypes.exact({\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    onCloseOverlay: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nModal.defaultProps = {\r\n  largeImageURL: \"\",\r\n};\r\n\r\nexport default Modal;\r\n","//* https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1) => {\r\n    // const baseUrl = 'https://pixabay.com/api/';\r\n    // const key = 'key=17627900-033e401422c15b0db6e889732';\r\n    // const type = 'image_type=photo';\r\n    // const orientation = '&orientation=horizontal';\r\n    // const per_page = 12;\r\n\r\n  return fetch(\r\n    //   `https://pixabay.com/api/?key=17627900-033e401422c15b0db6e889732&q=nature&image_type=photo&orientation=horizontal&per_page=12`\r\n      `https://pixabay.com/api/?key=17627900-033e401422c15b0db6e889732&q=${searchQuery}&image_type=photo&orientation=horizontal&page=${page}&per_page=12`\r\n    //   `${baseUrl}?${key}&q=${searchQuery}&page=${page}&${type}&${orientation}&per_page=${per_page}`\r\n    )\r\n    .then((res) => res.json())\r\n    .then((data) => data.hits);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport Layout from \"./Layout\";\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport Loader from \"react-loader-spinner\";\n\nimport imagesApi from \"../services/imagesApi\";\n\nexport default class App extends Component {\n  static propTypes = {\n    images: PropTypes.arrayOf(PropTypes.object),\n    loading: PropTypes.bool,\n    error: PropTypes.string,\n    searchQuery: PropTypes.string,\n    page: PropTypes.number.isRequired,\n    largeImageURL: PropTypes.string,\n  };\n\n  static defaultProps = {\n    page: 1,\n  };\n\n  state = {\n    images: [],\n    loading: false,\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    largeImageURL: null,\n  };\n\n  componentDidMount() {\n    window.addEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  showLargeImage = (url) => {\n    this.setState({ largeImageURL: url });\n    console.log(\"Модалка открыта!!!!!\");\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { images } = this.state;\n\n    const prevQuery = prevState.searchQuery;\n    const nextQuery = this.state.searchQuery;\n\n    if (prevQuery !== nextQuery) {\n      this.fetchImages();\n    }\n\n    if (prevState !== images) {\n      this.onScrollTo();\n    }\n  }\n\n  onScrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  componentWillUnmount() {\n    console.log(\"componentWillUnmount\");\n    window.removeEventListener(\"keydown\", this.handleKeyDown);\n  }\n\n  fetchImages = () => {\n    const { searchQuery, page } = this.state;\n\n    this.setState({ loading: true });\n\n    imagesApi\n      .fetchImagesWithQuery(searchQuery, page)\n      .then((images) => {\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          page: prevState.page + 1,\n        }));\n      })\n      .catch((error) => this.setState({ error }))\n      .finally(() => this.setState({ loading: false }));\n  };\n\n  //!=======================================================\n  closeModal = () => {\n    this.setState({\n      largeImageURL: null,\n    });\n  };\n\n  handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      this.closeModal();\n    }\n  };\n\n  handleClickOverlay = (e) => {\n    if (e.target.nodeName !== \"IMG\") {\n      this.closeModal();\n    }\n  };\n  //!=======================================================\n\n  handleSearchBarSubmit = (query) => {\n    this.setState({\n      images: [],\n      searchQuery: query,\n      page: 1,\n    });\n  };\n\n  render() {\n    const { images, loading, largeImageURL } = this.state;\n\n    return (\n      <Layout>\n        <Searchbar onSubmit={this.handleSearchBarSubmit} />\n        <ImageGallery images={images} onShowLargeImage={this.showLargeImage} />\n\n        {loading && (\n          <div className=\"loader\">\n            <Loader type=\"Oval\" color=\"#3f51b5\" height={100} width={100} />\n          </div>\n        )}\n\n        {images.length > 0 && <Button onLoadMore={this.fetchImages} />}\n\n        {largeImageURL && (\n          <Modal\n            largeImageURL={largeImageURL}\n            onCloseOverlay={this.handleClickOverlay}\n          />\n        )}\n      </Layout>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport App from './components/App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}